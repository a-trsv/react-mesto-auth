{"ast":null,"code":"import _classCallCheck from\"/Users/AleksiTarasov/Desktop/develop/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/AleksiTarasov/Desktop/develop/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._address=options.address;this._groupId=options.groupId;this._token=options.token;}_createClass(Api,[{key:\"getUserInfo\",value:function getUserInfo(){var _this=this;return fetch(\"\".concat(this._address,\"/\").concat(this._groupId,\"/users/me\"),{headers:{authorization:this._token,'Content-Type':'application/json'}}).then(function(res){return _this._checkServerResponse(res);});}},{key:\"patchUserInfo\",value:function patchUserInfo(_ref){var _this2=this;var inputName=_ref.name,inputJob=_ref.about;return fetch(\"\".concat(this._address,\"/\").concat(this._groupId,\"/users/me\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:inputName,about:inputJob})}).then(function(res){return _this2._checkServerResponse(res);});}},{key:\"getCards\",value:function getCards(){var _this3=this;return fetch(\"\".concat(this._address,\"/\").concat(this._groupId,\"/cards\"),{headers:{authorization:this._token,'Content-Type':'application/json'}}).then(function(res){return _this3._checkServerResponse(res);});}},{key:\"postCard\",value:function postCard(_ref2){var _this4=this;var inputName=_ref2.name,inputSRC=_ref2.link;return fetch(\"\".concat(this._address,\"/\").concat(this._groupId,\"/cards\"),{method:'POST',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({name:inputName,link:inputSRC})}).then(function(res){return _this4._checkServerResponse(res);});}},{key:\"deleteCard\",value:function deleteCard(cardId){var _this5=this;return fetch(\"\".concat(this._address,\"/\").concat(this._groupId,\"/cards/\").concat(cardId),{method:'DELETE',headers:{authorization:this._token}}).then(function(res){return _this5._checkServerResponse(res);});}},{key:\"setLike\",value:function setLike(cardId){var _this6=this;return fetch(\"\".concat(this._address,\"/\").concat(this._groupId,\"/cards/likes/\").concat(cardId),{method:'PUT',headers:{authorization:this._token}}).then(function(res){return _this6._checkServerResponse(res);});}},{key:\"deleteLike\",value:function deleteLike(cardId){var _this7=this;return fetch(\"\".concat(this._address,\"/\").concat(this._groupId,\"/cards/likes/\").concat(cardId),{method:'DELETE',headers:{authorization:this._token}}).then(function(res){return _this7._checkServerResponse(res);});}},{key:\"patchUserAvatar\",value:function patchUserAvatar(avatarSRC){var _this8=this;return fetch(\"\".concat(this._address,\"/\").concat(this._groupId,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:this._token,'Content-Type':'application/json'},body:JSON.stringify({avatar:avatarSRC})}).then(function(res){return _this8._checkServerResponse(res);});}},{key:\"_checkServerResponse\",value:function _checkServerResponse(res){if(res.ok){return res.json();}// Если происходит ошибка, отклоняем промис\nreturn Promise.reject(\"\".concat(res.status));}}]);return Api;}();var api=new Api({address:'https://mesto.nomoreparties.co/v1',groupId:'cohort-24',token:'4d34d552-bc81-44cb-b18a-2296a1ced45f'});export default api;","map":{"version":3,"sources":["/Users/AleksiTarasov/Desktop/develop/mesto-react/src/utils/api.js"],"names":["Api","options","_address","address","_groupId","groupId","_token","token","fetch","headers","authorization","then","res","_checkServerResponse","inputName","name","inputJob","about","method","body","JSON","stringify","inputSRC","link","cardId","avatarSRC","avatar","ok","json","Promise","reject","status","api"],"mappings":"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","sourcesContent":["class Api {\n    constructor(options) {\n        this._address = options.address\n        this._groupId = options.groupId\n        this._token = options.token\n    }\n    getUserInfo() {\n        return fetch(`${this._address}/${this._groupId}/users/me`, {\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n         .then(res => this._checkServerResponse(res))\n    }\n\n    patchUserInfo({name: inputName, about: inputJob}) {\n        return fetch(`${this._address}/${this._groupId}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: inputName,\n                about: inputJob,\n            })\n    })\n        .then(res => this._checkServerResponse(res))    \n    }\n\n    getCards() {\n        return fetch(`${this._address}/${this._groupId}/cards`, {\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => this._checkServerResponse(res)) \n    }\n    postCard({name: inputName, link: inputSRC}) {\n        return fetch(`${this._address}/${this._groupId}/cards`, {\n            method: 'POST',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: inputName,\n                link: inputSRC\n            })\n        })\n        .then(res => this._checkServerResponse(res)) \n        }\n    deleteCard(cardId){\n        return fetch(`${this._address}/${this._groupId}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n        .then(res => this._checkServerResponse(res)) \n        }\n    setLike(cardId){\n        return fetch(`${this._address}/${this._groupId}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: {\n                authorization: this._token,\n            }\n        })\n        .then(res => this._checkServerResponse(res)) \n    }\n    deleteLike(cardId){\n        return fetch(`${this._address}/${this._groupId}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n        .then(res => this._checkServerResponse(res)) \n    }\n    patchUserAvatar(avatarSRC) {\n        return fetch(`${this._address}/${this._groupId}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n               avatar: avatarSRC\n            })\n    })\n        .then(res => this._checkServerResponse(res))  \n    }\n\n    _checkServerResponse(res) {\n        if (res.ok) {\n            return res.json()\n        }\n    // Если происходит ошибка, отклоняем промис\n    return Promise.reject(`${res.status}`)\n    }\n}\n\nconst api = new Api({\n    address: 'https://mesto.nomoreparties.co/v1',\n    groupId: 'cohort-24',\n    token: '4d34d552-bc81-44cb-b18a-2296a1ced45f'\n  })\n\nexport default api"]},"metadata":{},"sourceType":"module"}