{"ast":null,"code":"import _slicedToArray from\"/Users/AleksiTarasov/Desktop/develop/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import api from'../utils/api';import Card from'./Card';import{CurrentUserContext}from'../contexts/CurrentUserContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Main(props){//   const [userName, setUserName] = React.useState('')\n//   const [userDescription, setUserDescription] = React.useState('')\n//   const [userAvatar, setUserAvatar] = React.useState('')\nvar _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),cards=_React$useState2[0],setCards=_React$useState2[1];var currentUser=React.useContext(CurrentUserContext);function handleCardLike(card){// Снова проверяем, есть ли уже лайк на этой карточке\nvar isLiked=card.likes.some(function(i){return i._id===currentUser._id;});// Отправляем запрос в API и получаем обновлённые данные карточки\napi.changeLikeCardStatus(card._id,!isLiked).then(function(newCard){setCards(function(state){return state.map(function(c){return c._id===card._id?newCard:c;});});}).catch(function(err){console.log(err);});}function handleCardDelete(card){api.deleteCard(card._id).then(function(){setCards(function(state){return state.filter(function(c){return c!==card;});});}).catch(function(err){console.log(err);});}//   React.useEffect(() => {\n//     Promise.all([api.getUserInfo(), api.getCards()])\n//       .then(([userData, cardsData]) => {\n//         setUserName(userData.name)\n//         setUserDescription(userData.about)\n//         setUserAvatar(userData.avatar)\n//         setCards(cardsData)\n//       })\n//       // Если сервер не ответил, выводим ошибку в консоль\n//       .catch((err) => {\n//         console.log(err)\n//       })\n//   }, [])\nReact.useEffect(function(){api.getCards().then(function(apiData){setCards(apiData);}).catch(function(err){console.log(err);});},[]);return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"section\",{className:\"profile\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile__container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile__photo-section\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"profile__avatar\",alt:\"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",src:currentUser.avatar,onClick:props.onEditAvatar}),/*#__PURE__*/_jsx(\"button\",{className:\"profile__icon\",type:\"button\",\"aria-label\":\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0444\\u043E\\u0442\\u043E\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile__info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile__zone\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"profile__title\",children:currentUser.name}),/*#__PURE__*/_jsx(\"button\",{\"aria-label\":\"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\",type:\"button\",className:\"profile__edit-button\",onClick:props.onEditProfile})]}),/*#__PURE__*/_jsx(\"p\",{className:\"profile__caption\",children:currentUser.about})]})]}),/*#__PURE__*/_jsx(\"button\",{\"aria-label\":\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0441\\u0432\\u043E\\u044E \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0443!\",type:\"button\",className:\"profile__add-button\",onClick:props.onAddPlace})]}),/*#__PURE__*/_jsx(\"section\",{className:\"elements\",children:cards.map(function(card){return/*#__PURE__*/_jsx(Card,{card:card,onCardClick:props.onCardClick,onCardLike:handleCardLike,onCardDelete:handleCardDelete},card._id);})})]});}export default Main;","map":{"version":3,"sources":["/Users/AleksiTarasov/Desktop/develop/mesto-react/src/components/Main.js"],"names":["React","api","Card","CurrentUserContext","Main","props","useState","cards","setCards","currentUser","useContext","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","c","catch","err","console","log","handleCardDelete","deleteCard","filter","useEffect","getCards","apiData","avatar","onEditAvatar","name","onEditProfile","about","onAddPlace","onCardClick"],"mappings":"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","sourcesContent":["import React from 'react'\nimport api from '../utils/api'\nimport Card from './Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Main(props) {\n\n    //   const [userName, setUserName] = React.useState('')\n    //   const [userDescription, setUserDescription] = React.useState('')\n    //   const [userAvatar, setUserAvatar] = React.useState('')\n    const [cards, setCards] = React.useState([])\n    const currentUser = React.useContext(CurrentUserContext);\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((state) => state.filter((c) => c !== card))\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n    //   React.useEffect(() => {\n    //     Promise.all([api.getUserInfo(), api.getCards()])\n    //       .then(([userData, cardsData]) => {\n    //         setUserName(userData.name)\n    //         setUserDescription(userData.about)\n    //         setUserAvatar(userData.avatar)\n    //         setCards(cardsData)\n    //       })\n    //       // Если сервер не ответил, выводим ошибку в консоль\n    //       .catch((err) => {\n    //         console.log(err)\n    //       })\n    //   }, [])\n\n    React.useEffect(() => {\n        api.getCards()\n            .then((apiData) => {\n                setCards(apiData)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n\n    return (\n        <main>\n            <section className=\"profile\">\n                <div className=\"profile__container\">\n                    <div className=\"profile__photo-section\">\n                        <img className=\"profile__avatar\" alt=\"Аватар\" src={currentUser.avatar} onClick={props.onEditAvatar} />\n                        <button\n                            className=\"profile__icon\"\n                            type=\"button\"\n                            aria-label=\"Загрузка своего фото\"\n                        >\n                        </button>\n                    </div>\n                    <div className=\"profile__info\">\n                        <div className=\"profile__zone\">\n                            <h1 className=\"profile__title\">{currentUser.name}</h1>\n                            <button\n                                aria-label=\"Измените данные\"\n                                type=\"button\"\n                                className=\"profile__edit-button\"\n                                onClick={props.onEditProfile} >\n                            </button>\n                        </div>\n                        <p className=\"profile__caption\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button\n                    aria-label=\"Добавьте свою карточку!\"\n                    type=\"button\"\n                    className=\"profile__add-button\"\n                    onClick={props.onAddPlace} >\n                </button>\n            </section>\n            <section className=\"elements\">\n                {cards.map(card =>\n                    <Card\n                        key={card._id}\n                        card={card}\n                        onCardClick={props.onCardClick}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                    />\n                )}\n            </section>\n        </main>\n    )\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}