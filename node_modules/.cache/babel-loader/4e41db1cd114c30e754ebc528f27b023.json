{"ast":null,"code":"var _jsxFileName = \"/Users/AleksiTarasov/Desktop/develop/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState(''); // Подписка на контекст\n\n  const currentUser = React.useContext(CurrentUserContext); // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(evt) {\n    // Запрещаем браузеру переходить по адресу формы\n    evt.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  function handleChangeName(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleChangeJob(evt) {\n    setDescription(evt.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"edit\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    saveButton: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"inputName\",\n      name: \"inputName\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n      className: \"form__input form__input_type_name\",\n      minLength: 2,\n      maxLength: 40,\n      required: true,\n      onChange: handleChangeName,\n      value: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form__error\",\n      id: \"inputName-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"inputJob\",\n      name: \"inputJob\",\n      placeholder: \"\\u0427\\u0435\\u043C \\u0437\\u0430\\u043D\\u0438\\u043C\\u0430\\u0435\\u0442\\u0435\\u0441\\u044C?\",\n      className: \"form__input form__input_type_job\",\n      minLength: 2,\n      maxLength: 200,\n      required: true,\n      onChange: handleChangeJob,\n      value: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"form__error\",\n      id: \"inputJob-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"xN46w6he9KBZHBk1q+JY6GV4FrA=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/AleksiTarasov/Desktop/develop/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","name","setName","useState","description","setDescription","currentUser","useContext","useEffect","about","handleSubmit","evt","preventDefault","onUpdateUser","handleChangeName","target","value","handleChangeJob","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAE7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,KAAK,CAACO,QAAN,CAAe,EAAf,CAAtC,CAH6B,CAK7B;;AACA,QAAMG,WAAW,GAAGV,KAAK,CAACW,UAAN,CAAiBT,kBAAjB,CAApB,CAN6B,CAQ7B;AACA;;AACAF,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AAClBN,IAAAA,OAAO,CAACI,WAAW,CAACL,IAAb,CAAP;AACAI,IAAAA,cAAc,CAACC,WAAW,CAACG,KAAb,CAAd;AACH,GAHD,EAGG,CAACH,WAAD,CAHH;;AAKA,WAASI,YAAT,CAAsBC,GAAtB,EAA2B;AACvB;AACAA,IAAAA,GAAG,CAACC,cAAJ,GAFuB,CAIvB;;AACAZ,IAAAA,KAAK,CAACa,YAAN,CAAmB;AACfZ,MAAAA,IAAI,EAAEA,IADS;AAEfQ,MAAAA,KAAK,EAAEL;AAFQ,KAAnB;AAIH;;AAED,WAASU,gBAAT,CAA0BH,GAA1B,EAA+B;AAC3BT,IAAAA,OAAO,CAACS,GAAG,CAACI,MAAJ,CAAWC,KAAZ,CAAP;AACH;;AAED,WAASC,eAAT,CAAyBN,GAAzB,EAA8B;AAC1BN,IAAAA,cAAc,CAACM,GAAG,CAACI,MAAJ,CAAWC,KAAZ,CAAd;AACH;;AAED,sBACI,QAAC,aAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAC,2HAFV;AAGI,IAAA,MAAM,EAAEhB,KAAK,CAACkB,MAHlB;AAII,IAAA,OAAO,EAAElB,KAAK,CAACmB,OAJnB;AAKI,IAAA,QAAQ,EAAET,YALd;AAMI,IAAA,UAAU,EAAC,wDANf;AAAA,4BAQI;AACI,MAAA,IAAI,EAAC,MADT;AACgB,MAAA,EAAE,EAAC,WADnB;AAC+B,MAAA,IAAI,EAAC,WADpC;AAEI,MAAA,WAAW,EAAC,wFAFhB;AAGI,MAAA,SAAS,EAAC,mCAHd;AAII,MAAA,SAAS,EAAE,CAJf;AAIkB,MAAA,SAAS,EAAE,EAJ7B;AAIiC,MAAA,QAAQ,MAJzC;AAKI,MAAA,QAAQ,EAAEI,gBALd;AAMI,MAAA,KAAK,EAAEb;AANX;AAAA;AAAA;AAAA;AAAA,YARJ,eAgBI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,EAAE,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAiBI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,UAAtB;AAAiC,MAAA,IAAI,EAAC,UAAtC;AACI,MAAA,WAAW,EAAC,wFADhB;AAEI,MAAA,SAAS,EAAC,kCAFd;AAGI,MAAA,SAAS,EAAE,CAHf;AAGkB,MAAA,SAAS,EAAE,GAH7B;AAGkC,MAAA,QAAQ,MAH1C;AAII,MAAA,QAAQ,EAAEgB,eAJd;AAKI,MAAA,KAAK,EAAEb;AALX;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAuBI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,EAAE,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA7DQL,gB;;KAAAA,gB;AA+DT,eAAeA,gBAAf","sourcesContent":["import React from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup(props) {\n\n    const [name, setName] = React.useState('')\n    const [description, setDescription] = React.useState('')\n\n    // Подписка на контекст\n    const currentUser = React.useContext(CurrentUserContext)\n\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name)\n        setDescription(currentUser.about)\n    }, [currentUser])\n\n    function handleSubmit(evt) {\n        // Запрещаем браузеру переходить по адресу формы\n        evt.preventDefault()\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onUpdateUser({\n            name: name,\n            about: description,\n        })\n    }\n\n    function handleChangeName(evt) {\n        setName(evt.target.value)\n    }\n\n    function handleChangeJob(evt) {\n        setDescription(evt.target.value)\n    }\n\n    return (\n        <PopupWithForm\n            name=\"edit\"\n            title=\"Редактировать профиль\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n            saveButton=\"Сохранить\"\n        >\n            <input\n                type=\"text\" id=\"inputName\" name=\"inputName\"\n                placeholder=\"Введите Ваше имя\"\n                className=\"form__input form__input_type_name\"\n                minLength={2} maxLength={40} required\n                onChange={handleChangeName}\n                value={name}\n            />\n            <span className=\"form__error\" id=\"inputName-error\" />\n            <input type=\"text\" id=\"inputJob\" name=\"inputJob\"\n                placeholder=\"Чем занимаетесь?\"\n                className=\"form__input form__input_type_job\"\n                minLength={2} maxLength={200} required\n                onChange={handleChangeJob} \n                value={description} />\n            <span className=\"form__error\" id=\"inputJob-error\" />\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup\n"]},"metadata":{},"sourceType":"module"}