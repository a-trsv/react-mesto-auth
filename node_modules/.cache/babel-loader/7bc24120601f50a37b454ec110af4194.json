{"ast":null,"code":"var _jsxFileName = \"/Users/AleksiTarasov/Desktop/develop/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  //   const [userName, setUserName] = React.useState('')\n  //   const [userDescription, setUserDescription] = React.useState('')\n  //   const [userAvatar, setUserAvatar] = React.useState('')\n  const [cards, setCards] = React.useState([]);\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  } //   React.useEffect(() => {\n  //     Promise.all([api.getUserInfo(), api.getCards()])\n  //       .then(([userData, cardsData]) => {\n  //         setUserName(userData.name)\n  //         setUserDescription(userData.about)\n  //         setUserAvatar(userData.avatar)\n  //         setCards(cardsData)\n  //       })\n  //       // Если сервер не ответил, выводим ошибку в консоль\n  //       .catch((err) => {\n  //         console.log(err)\n  //       })\n  //   }, [])\n\n\n  React.useEffect(() => {\n    api.getCards().then(apiData => {\n      setCards(apiData);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__photo-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile__avatar\",\n            alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",\n            src: currentUser.avatar,\n            onClick: props.onEditAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__icon\",\n            type: \"button\",\n            \"aria-label\": \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0444\\u043E\\u0442\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__zone\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__title\",\n              children: currentUser.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              \"aria-label\": \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\",\n              type: \"button\",\n              className: \"profile__edit-button\",\n              onClick: props.onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__caption\",\n            children: currentUser.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0441\\u0432\\u043E\\u044E \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0443!\",\n        type: \"button\",\n        className: \"profile__add-button\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        onCardClick: props.onCardClick,\n        onCardLike: handleCardLike\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"i1qbvVxwMo1neJ4vkYBGj+LVrsk=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/AleksiTarasov/Desktop/develop/mesto-react/src/components/Main.js"],"names":["React","api","Card","CurrentUserContext","Main","props","cards","setCards","useState","currentUser","useContext","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","c","catch","err","console","log","useEffect","getCards","apiData","avatar","onEditAvatar","name","onEditProfile","about","onAddPlace","onCardClick"],"mappings":"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","sourcesContent":["import React from 'react'\nimport api from '../utils/api'\nimport Card from './Card'\nimport {CurrentUserContext} from '../contexts/CurrentUserContext'\n\nfunction Main(props) {\n\n//   const [userName, setUserName] = React.useState('')\n//   const [userDescription, setUserDescription] = React.useState('')\n//   const [userAvatar, setUserAvatar] = React.useState('')\n  const [cards, setCards] = React.useState([])\n  const currentUser = React.useContext(CurrentUserContext);\n\n    function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch((err) => {\n            console.log(err)\n          })\n      }\n//   React.useEffect(() => {\n//     Promise.all([api.getUserInfo(), api.getCards()])\n//       .then(([userData, cardsData]) => {\n//         setUserName(userData.name)\n//         setUserDescription(userData.about)\n//         setUserAvatar(userData.avatar)\n//         setCards(cardsData)\n//       })\n//       // Если сервер не ответил, выводим ошибку в консоль\n//       .catch((err) => {\n//         console.log(err)\n//       })\n//   }, [])\n\n    React.useEffect(() => {\n        api.getCards()\n        .then((apiData) => {\n            setCards(apiData)\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }, [])\n\n\n  return (\n    <main>\n      <section className=\"profile\">\n        <div className=\"profile__container\">\n          <div className=\"profile__photo-section\">\n            <img className=\"profile__avatar\" alt=\"Аватар\" src={currentUser.avatar} onClick={props.onEditAvatar} />\n            <button\n              className=\"profile__icon\"\n              type=\"button\"\n              aria-label=\"Загрузка своего фото\"\n            >\n            </button>\n          </div>\n          <div className=\"profile__info\">\n            <div className=\"profile__zone\">\n              <h1 className=\"profile__title\">{currentUser.name}</h1>\n              <button\n                aria-label=\"Измените данные\"\n                type=\"button\"\n                className=\"profile__edit-button\"\n                onClick={props.onEditProfile} >\n              </button>\n            </div>\n            <p className=\"profile__caption\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button\n          aria-label=\"Добавьте свою карточку!\"\n          type=\"button\"\n          className=\"profile__add-button\"\n          onClick={props.onAddPlace} >\n        </button>\n      </section>\n      <section className=\"elements\">\n        {cards.map(card =>\n          <Card\n            key={card._id}\n            card={card}\n            onCardClick={props.onCardClick}\n            onCardLike={handleCardLike}\n          />\n        )}\n      </section>\n    </main>\n  )\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}