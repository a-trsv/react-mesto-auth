{"ast":null,"code":"import _slicedToArray from\"/Users/AleksiTarasov/Desktop/develop/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import PopupWithForm from'./PopupWithForm';import{CurrentUserContext}from'../contexts/CurrentUserContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EditProfilePopup(_ref){var onUpdateUser=_ref.onUpdateUser,isOpen=_ref.isOpen,onClose=_ref.onClose;var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),name=_React$useState2[0],setName=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),description=_React$useState4[0],setDescription=_React$useState4[1];// Подписка на контекст\nvar currentUser=React.useContext(CurrentUserContext);// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(function(){setName(currentUser.name);setDescription(currentUser.about);},[currentUser]);function handleSubmit(evt){// Запрещаем браузеру переходить по адресу формы\nevt.preventDefault();// Передаём значения управляемых компонентов во внешний обработчик\nonUpdateUser({name:name,about:description});}function handleChangeName(evt){setName(evt.target.value);}function handleChangeJob(evt){setDescription(evt.target.value);}return/*#__PURE__*/_jsxs(PopupWithForm,{name:\"edit\",title:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",isOpen:isOpen,onClose:onClose,onSubmit:handleSubmit,saveButton:\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"inputName\",name:\"inputName\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",className:\"form__input form__input_type_name\",minLength:2,maxLength:40,required:true,onChange:handleChangeName,value:name}),/*#__PURE__*/_jsx(\"span\",{className:\"form__error\",id:\"inputName-error\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"inputJob\",name:\"inputJob\",placeholder:\"\\u0427\\u0435\\u043C \\u0437\\u0430\\u043D\\u0438\\u043C\\u0430\\u0435\\u0442\\u0435\\u0441\\u044C?\",className:\"form__input form__input_type_job\",minLength:2,maxLength:200,required:true,onChange:handleChangeJob,value:description}),/*#__PURE__*/_jsx(\"span\",{className:\"form__error\",id:\"inputJob-error\"})]});}export default EditProfilePopup;","map":{"version":3,"sources":["/Users/AleksiTarasov/Desktop/develop/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","onUpdateUser","isOpen","onClose","useState","name","setName","description","setDescription","currentUser","useContext","useEffect","about","handleSubmit","evt","preventDefault","handleChangeName","target","value","handleChangeJob"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,kBAAT,KAAmC,gCAAnC,C,wFAEA,QAASC,CAAAA,gBAAT,MAA2D,IAAhCC,CAAAA,YAAgC,MAAhCA,YAAgC,CAAlBC,MAAkB,MAAlBA,MAAkB,CAAVC,OAAU,MAAVA,OAAU,CAEvD,oBAAwBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAAxB,oDAAOC,IAAP,qBAAaC,OAAb,qBACA,qBAAsCT,KAAK,CAACO,QAAN,CAAe,EAAf,CAAtC,qDAAOG,WAAP,qBAAoBC,cAApB,qBACA;AACA,GAAMC,CAAAA,WAAW,CAAGZ,KAAK,CAACa,UAAN,CAAiBX,kBAAjB,CAApB,CAEA;AACA;AACAF,KAAK,CAACc,SAAN,CAAgB,UAAM,CAClBL,OAAO,CAACG,WAAW,CAACJ,IAAb,CAAP,CACAG,cAAc,CAACC,WAAW,CAACG,KAAb,CAAd,CACH,CAHD,CAGG,CAACH,WAAD,CAHH,EAKA,QAASI,CAAAA,YAAT,CAAsBC,GAAtB,CAA2B,CACvB;AACAA,GAAG,CAACC,cAAJ,GAEA;AACAd,YAAY,CAAC,CACTI,IAAI,CAAJA,IADS,CAETO,KAAK,CAAEL,WAFE,CAAD,CAAZ,CAIH,CAED,QAASS,CAAAA,gBAAT,CAA0BF,GAA1B,CAA+B,CAC3BR,OAAO,CAACQ,GAAG,CAACG,MAAJ,CAAWC,KAAZ,CAAP,CACH,CAED,QAASC,CAAAA,eAAT,CAAyBL,GAAzB,CAA8B,CAC1BN,cAAc,CAACM,GAAG,CAACG,MAAJ,CAAWC,KAAZ,CAAd,CACH,CAED,mBACI,MAAC,aAAD,EACI,IAAI,CAAC,MADT,CAEI,KAAK,CAAC,2HAFV,CAGI,MAAM,CAAEhB,MAHZ,CAII,OAAO,CAAEC,OAJb,CAKI,QAAQ,CAAEU,YALd,CAMI,UAAU,CAAC,wDANf,wBAQI,cACI,IAAI,CAAC,MADT,CACgB,EAAE,CAAC,WADnB,CAC+B,IAAI,CAAC,WADpC,CAEI,WAAW,CAAC,wFAFhB,CAGI,SAAS,CAAC,mCAHd,CAII,SAAS,CAAE,CAJf,CAIkB,SAAS,CAAE,EAJ7B,CAIiC,QAAQ,KAJzC,CAKI,QAAQ,CAAEG,gBALd,CAMI,KAAK,CAAEX,IANX,EARJ,cAgBI,aAAM,SAAS,CAAC,aAAhB,CAA8B,EAAE,CAAC,iBAAjC,EAhBJ,cAiBI,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,UAAtB,CAAiC,IAAI,CAAC,UAAtC,CACI,WAAW,CAAC,wFADhB,CAEI,SAAS,CAAC,kCAFd,CAGI,SAAS,CAAE,CAHf,CAGkB,SAAS,CAAE,GAH7B,CAGkC,QAAQ,KAH1C,CAII,QAAQ,CAAEc,eAJd,CAKI,KAAK,CAAEZ,WALX,EAjBJ,cAuBI,aAAM,SAAS,CAAC,aAAhB,CAA8B,EAAE,CAAC,gBAAjC,EAvBJ,GADJ,CA2BH,CAED,cAAeP,CAAAA,gBAAf","sourcesContent":["import React from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup({onUpdateUser, isOpen, onClose}) {\n\n    const [name, setName] = React.useState('')\n    const [description, setDescription] = React.useState('')\n    // Подписка на контекст\n    const currentUser = React.useContext(CurrentUserContext)\n\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name)\n        setDescription(currentUser.about)\n    }, [currentUser])\n\n    function handleSubmit(evt) {\n        // Запрещаем браузеру переходить по адресу формы\n        evt.preventDefault()\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        onUpdateUser({\n            name,\n            about: description\n        })\n    }\n\n    function handleChangeName(evt) {\n        setName(evt.target.value)\n    }\n\n    function handleChangeJob(evt) {\n        setDescription(evt.target.value)\n    }\n\n    return (\n        <PopupWithForm\n            name=\"edit\"\n            title=\"Редактировать профиль\"\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n            saveButton=\"Сохранить\"\n        >\n            <input\n                type=\"text\" id=\"inputName\" name=\"inputName\"\n                placeholder=\"Введите Ваше имя\"\n                className=\"form__input form__input_type_name\"\n                minLength={2} maxLength={40} required\n                onChange={handleChangeName}\n                value={name}\n            />\n            <span className=\"form__error\" id=\"inputName-error\" />\n            <input type=\"text\" id=\"inputJob\" name=\"inputJob\"\n                placeholder=\"Чем занимаетесь?\"\n                className=\"form__input form__input_type_job\"\n                minLength={2} maxLength={200} required\n                onChange={handleChangeJob}\n                value={description} />\n            <span className=\"form__error\" id=\"inputJob-error\" />\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup\n"]},"metadata":{},"sourceType":"module"}