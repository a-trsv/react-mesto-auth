{"ast":null,"code":"var _jsxFileName = \"/Users/AleksiTarasov/Desktop/develop/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport ConfirmCardDelete from './ConfirmCardDelete';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport ProtectedRoute from './ProtectedRoute';\nimport { Route, Switch } from 'react-router-dom';\nimport Register from './Register';\nimport Login from './Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  {\n    /* Заготовка для реализации попапа с подтверждением удаления карточки */\n  }\n  const [isDeleteCardPopupOpen, setDeleteCardPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  {\n    /* Устанавливаем стейт для 12 спринта */\n  }\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCards()]).then(([userData, apiData]) => {\n      setCurrentUser(userData);\n      setCards(apiData); // console.log(apiData)\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c !== card));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateUser(userData) {\n    api.patchUserInfo(userData).then(userData => {\n      setCurrentUser(userData); // console.log(userData)\n\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit(apiData) {\n    api.postCard(apiData).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar(userData) {\n    api.patchUserAvatar(userData).then(userData => {\n      setCurrentUser(userData); // console.log(userData)\n\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setImagePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page__content\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          path: \"/\",\n          component: Main,\n          loggedIn: loggedIn,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onUpdateUser: handleUpdateUser,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onUpdateAvatar: handleUpdateAvatar,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onAddPlace: handleAddPlaceSubmit,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmCardDelete, {\n        isOpen: isDeleteCardPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: isImagePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"suzQEV0J16KS0yIjTcUne56wk88=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/AleksiTarasov/Desktop/develop/react-mesto-auth/src/components/App.js"],"names":["React","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ImagePopup","ConfirmCardDelete","api","CurrentUserContext","ProtectedRoute","Route","Switch","Register","Login","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isImagePopupOpen","setImagePopupOpen","isDeleteCardPopupOpen","setDeleteCardPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","useEffect","Promise","all","getUserInfo","getCards","then","userData","apiData","catch","err","console","log","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleUpdateUser","patchUserInfo","closeAllPopups","handleAddPlaceSubmit","postCard","handleUpdateAvatar","patchUserAvatar","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport ImagePopup from './ImagePopup'\nimport ConfirmCardDelete from './ConfirmCardDelete'\nimport api from '../utils/api'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport ProtectedRoute from './ProtectedRoute'\nimport { Route, Switch } from 'react-router-dom'\nimport Register  from './Register'\nimport Login from './Login'\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false)\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false)\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false)\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false)\n    {/* Заготовка для реализации попапа с подтверждением удаления карточки */ }\n    const [isDeleteCardPopupOpen, setDeleteCardPopupOpen] = React.useState(false)\n    const [selectedCard, setSelectedCard] = React.useState({})\n    const [currentUser, setCurrentUser] = React.useState({})\n    const [cards, setCards] = React.useState([])\n    {/* Устанавливаем стейт для 12 спринта */ }\n    const [loggedIn, setLoggedIn] = React.useState(false)\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getCards()])\n            .then(([userData, apiData]) => {\n                setCurrentUser(userData)\n                setCards(apiData)\n                // console.log(apiData)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((state) => state.filter((c) => c !== card))\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleUpdateUser(userData) {\n        api.patchUserInfo(userData)\n            .then((userData) => {\n                setCurrentUser(userData)\n                // console.log(userData)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleAddPlaceSubmit(apiData) {\n        api.postCard(apiData)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleUpdateAvatar(userData) {\n        api.patchUserAvatar(userData)\n            .then((userData) => {\n                setCurrentUser(userData)\n                // console.log(userData)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true)\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true)\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true)\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n        setImagePopupOpen(true)\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false)\n        setAddPlacePopupOpen(false)\n        setImagePopupOpen(false)\n        setSelectedCard({})\n    }\n\n    return (\n        <div className=\"page__content\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header />\n                <Switch>\n                    {/* Регистрация нового пользователя */}\n                    <Route path=\"/sign-up\">\n                        <Register />\n                    </Route>\n                    {/* Авторизация существующего пользователя */}\n                    <Route path=\"/sign-in\">\n                        <Login />\n                    </Route>\n                    {/* Отрисовываем сайт для авторизованного пользователя */}\n                    <ProtectedRoute\n                        path=\"/\"\n                        component={Main}\n                        loggedIn={loggedIn}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n\n                    />\n                </Switch>\n                {/* <Main\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick}\n                /> */}\n                <Footer />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onUpdateUser={handleUpdateUser}\n                    onClose={closeAllPopups}\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    onClose={closeAllPopups}\n                />\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onAddPlace={handleAddPlaceSubmit}\n                    onClose={closeAllPopups}\n                />\n\n                {/* Заготовка для реализации попапа с подтверждением удаления карточки */}\n                <ConfirmCardDelete\n                    isOpen={isDeleteCardPopupOpen}\n                    onClose={closeAllPopups}\n                />\n\n                <ImagePopup\n                    card={selectedCard}\n                    isOpen={isImagePopupOpen}\n                    onClose={closeAllPopups}\n                />\n            </CurrentUserContext.Provider>\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}