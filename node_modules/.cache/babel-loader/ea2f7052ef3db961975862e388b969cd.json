{"ast":null,"code":"var _jsxFileName = \"/Users/AleksiTarasov/Desktop/develop/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  //   const [userName, setUserName] = React.useState('')\n  //   const [userDescription, setUserDescription] = React.useState('')\n  //   const [userAvatar, setUserAvatar] = React.useState('')\n  const currentUser = React.useContext(CurrentUserContext);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c !== card));\n    }).catch(err => {\n      console.log(err);\n    });\n  } //   React.useEffect(() => {\n  //     Promise.all([api.getUserInfo(), api.getCards()])\n  //       .then(([userData, cardsData]) => {\n  //         setUserName(userData.name)\n  //         setUserDescription(userData.about)\n  //         setUserAvatar(userData.avatar)\n  //         setCards(cardsData)\n  //       })\n  //       // Если сервер не ответил, выводим ошибку в консоль\n  //       .catch((err) => {\n  //         console.log(err)\n  //       })\n  //   }, [])\n\n\n  React.useEffect(() => {\n    api.getCards().then(apiData => {\n      setCards(apiData);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__photo-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"profile__avatar\",\n            alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",\n            src: currentUser.avatar,\n            onClick: props.onEditAvatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__icon\",\n            type: \"button\",\n            \"aria-label\": \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0444\\u043E\\u0442\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__zone\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__title\",\n              children: currentUser.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              \"aria-label\": \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\",\n              type: \"button\",\n              className: \"profile__edit-button\",\n              onClick: props.onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__caption\",\n            children: currentUser.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u0441\\u0432\\u043E\\u044E \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0443!\",\n        type: \"button\",\n        className: \"profile__add-button\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        onCardClick: props.onCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"N4+B0ZvPcRmPO04BSdVfW79EaTw=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/AleksiTarasov/Desktop/develop/mesto-react/src/components/Main.js"],"names":["React","api","Card","CurrentUserContext","Main","props","currentUser","useContext","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","setCards","state","map","c","catch","err","console","log","handleCardDelete","deleteCard","filter","useEffect","getCards","apiData","avatar","onEditAvatar","name","onEditProfile","about","onAddPlace","cards","onCardClick"],"mappings":"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","sourcesContent":["import React from 'react'\nimport api from '../utils/api'\nimport Card from './Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Main(props) {\n\n    //   const [userName, setUserName] = React.useState('')\n    //   const [userDescription, setUserDescription] = React.useState('')\n    //   const [userAvatar, setUserAvatar] = React.useState('')\n    const currentUser = React.useContext(CurrentUserContext);\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((state) => state.filter((c) => c !== card))\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n    //   React.useEffect(() => {\n    //     Promise.all([api.getUserInfo(), api.getCards()])\n    //       .then(([userData, cardsData]) => {\n    //         setUserName(userData.name)\n    //         setUserDescription(userData.about)\n    //         setUserAvatar(userData.avatar)\n    //         setCards(cardsData)\n    //       })\n    //       // Если сервер не ответил, выводим ошибку в консоль\n    //       .catch((err) => {\n    //         console.log(err)\n    //       })\n    //   }, [])\n\n    React.useEffect(() => {\n        api.getCards()\n            .then((apiData) => {\n                setCards(apiData)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n\n    return (\n        <main>\n            <section className=\"profile\">\n                <div className=\"profile__container\">\n                    <div className=\"profile__photo-section\">\n                        <img className=\"profile__avatar\" alt=\"Аватар\" src={currentUser.avatar} onClick={props.onEditAvatar} />\n                        <button\n                            className=\"profile__icon\"\n                            type=\"button\"\n                            aria-label=\"Загрузка своего фото\"\n                        >\n                        </button>\n                    </div>\n                    <div className=\"profile__info\">\n                        <div className=\"profile__zone\">\n                            <h1 className=\"profile__title\">{currentUser.name}</h1>\n                            <button\n                                aria-label=\"Измените данные\"\n                                type=\"button\"\n                                className=\"profile__edit-button\"\n                                onClick={props.onEditProfile} >\n                            </button>\n                        </div>\n                        <p className=\"profile__caption\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button\n                    aria-label=\"Добавьте свою карточку!\"\n                    type=\"button\"\n                    className=\"profile__add-button\"\n                    onClick={props.onAddPlace} >\n                </button>\n            </section>\n            <section className=\"elements\">\n                {cards.map(card =>\n                    <Card\n                        key={card._id}\n                        card={card}\n                        onCardClick={props.onCardClick}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                    />\n                )}\n            </section>\n        </main>\n    )\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}