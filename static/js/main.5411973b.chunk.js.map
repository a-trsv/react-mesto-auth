{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/ConfirmCardDelete.js","utils/api.js","components/ProtectedRoute.js","components/Register.js","components/Login.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","pathname","useLocation","linkName","linkUrl","className","src","headerLogo","alt","to","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","aria-label","type","link","name","length","Main","props","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","Footer","Date","getFullYear","PopupWithForm","isOpen","title","onSubmit","noValidate","children","saveButton","onClose","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","id","placeholder","minLength","maxLength","required","onChange","target","value","EditAvatarPopup","userAvatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","ImagePopup","ConfirmCardDelete","api","options","this","_address","address","_groupId","groupId","_token","token","fetch","headers","authorization","then","res","_checkServerResponse","inputName","inputJob","method","body","JSON","stringify","apiData","cardId","setLike","deleteLike","userData","ok","json","Promise","reject","status","ProtectedRoute","Component","component","loggedIn","Register","Login","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isImagePopupOpen","setImagePopupOpen","isDeleteCardPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getUserInfo","getCards","catch","err","console","log","Provider","path","changeLikeCardStatus","newCard","state","c","deleteCard","filter","patchUserInfo","patchUserAvatar","postCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5411973b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import headerLogo from '../images/logo.svg'\nimport React  from 'react'\nimport { Link, useLocation } from \"react-router-dom\"\n\nfunction Header() {\n    const { pathname } = useLocation();\n    const linkName = `${pathname === '/sign-up' ? 'Войти': 'Регистрация'}`;\n    const linkUrl = `${pathname === '/sign-up' ? '/sign-in' : '/sign-up'}`;\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={headerLogo} alt=\"Логотип сервиса Mesto\" />\n            <div className=\"header__nav\">\n                (\n                    {/* Если пользователь уже залогинился, то выводим Email пользователя и кнопку выхода из профиля  */}\n                    {/* { loggedIn ?\n                        (\n                            <>  \n                                <span className=\"header__email\">{email}</span>\n                                <Link className=\"header__exit\" to=\"/\">Выйти</Link>\n                            </>\n                        ) : ( */}\n                        {/* Если пользователь не залогинился, то вывод ссылки зависит от страницы нахождения пользователя */}\n                        <Link className=\"header__link\" to={linkUrl}>{linkName}</Link>\n                        {/* )\n                    } */}\n                )\n      </div>\n        </header>\n    )\n}\n\nexport default Header","import React from 'react'\n\n// Экспортируе новый объект контекста\n\nexport const CurrentUserContext = React.createContext();","import React from 'react'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\n    const currentUser = React.useContext(CurrentUserContext)\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n        `element__delete-button ${isOwn ? '' : 'element__delete-button_type_hidden'}`\n    )\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id)\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = (\n        `element__like-button ${isLiked ? 'element__like-button_active' : ''}`\n    )\n\n    function handleClick() {\n        onCardClick(card)\n    }\n\n    function handleLikeClick() {\n        onCardLike(card)\n    }\n\n    function handleDeleteClick() {\n        onCardDelete(card)\n    }\n\n    return (\n        <article className=\"element\">\n            <button onClick={handleDeleteClick} aria-label=\"Удалить карточку\" type=\"button\" className={cardDeleteButtonClassName} />\n            <img onClick={handleClick} className=\"element__image\" src={card.link} alt={`Крупным планом: ${card.name}`} />\n            <div className=\"element__place\">\n                <h2 className=\"element__title\">{card.name}</h2>\n                <div className=\"element__like-area\">\n                    <button onClick={handleLikeClick} aria-label=\"Оцените фотографию!\" type=\"button\"\n                        className={cardLikeButtonClassName} />\n                    <span className=\"element__like-count\">{card.likes.length}</span>\n                </div>\n            </div>\n        </article>\n    )\n}\n\nexport default Card","import React from 'react'\nimport Card from './Card'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Main(props) {\n\n    const currentUser = React.useContext(CurrentUserContext)\n\n    return (\n        <main>\n            <section className=\"profile\">\n                <div className=\"profile__container\">\n                    <div className=\"profile__photo-section\">\n                        <img className=\"profile__avatar\" alt=\"Аватар\" src={currentUser.avatar} onClick={props.onEditAvatar} />\n                        <button\n                            className=\"profile__icon\"\n                            type=\"button\"\n                            aria-label=\"Загрузка своего фото\"\n                        >\n                        </button>\n                    </div>\n                    <div className=\"profile__info\">\n                        <div className=\"profile__zone\">\n                            <h1 className=\"profile__title\">{currentUser.name}</h1>\n                            <button\n                                aria-label=\"Измените данные\"\n                                type=\"button\"\n                                className=\"profile__edit-button\"\n                                onClick={props.onEditProfile} >\n                            </button>\n                        </div>\n                        <p className=\"profile__caption\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button\n                    aria-label=\"Добавьте свою карточку!\"\n                    type=\"button\"\n                    className=\"profile__add-button\"\n                    onClick={props.onAddPlace} >\n                </button>\n            </section>\n            <section className=\"elements\">\n                {props.cards.map(card =>\n                    <Card\n                        key={card._id}\n                        card={card}\n                        onCardClick={props.onCardClick}\n                        onCardLike={props.onCardLike}\n                        onCardDelete={props.onCardDelete}\n                    />\n                )}\n            </section>\n        </main>\n    )\n}\n\nexport default Main","function Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Mesto Russia</p>\n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\n\nfunction PopupWithForm(props) {\n    return (\n        <div className={`popup ${props.isOpen && 'popup_active'}`}>\n            <div className=\"popup__container\">\n                <h2 className=\"popup__title\">{props.title}</h2>\n                <form\n                    name={props.name}\n                    className={`form form_type_${props.name}`}\n                    onSubmit={props.onSubmit}\n                    noValidate\n                >\n                    {props.children}\n                    <button type=\"submit\" className=\"form__save-button\">{props.saveButton}</button>\n                </form>\n                <button onClick={props.onClose} aria-label=\"Отменить изменения\" type=\"button\"\n                    className={`popup__close-button popup__close-button_type_${props.name}`} />\n            </div>\n        </div>\n    )\n}\n\nexport default PopupWithForm\n","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup({onUpdateUser, isOpen, onClose}) {\n\n    const [name, setName] = React.useState('')\n    const [description, setDescription] = React.useState('')\n    // Подписка на контекст\n    const currentUser = React.useContext(CurrentUserContext)\n\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name)\n        setDescription(currentUser.about)\n    }, [currentUser])\n\n    function handleSubmit(evt) {\n        // Запрещаем браузеру переходить по адресу формы\n        evt.preventDefault()\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        onUpdateUser({\n            name,\n            about: description\n        })\n    }\n\n    function handleChangeName(evt) {\n        setName(evt.target.value)\n    }\n\n    function handleChangeJob(evt) {\n        setDescription(evt.target.value)\n    }\n\n    return (\n        <PopupWithForm\n            name=\"edit\"\n            title=\"Редактировать профиль\"\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n            saveButton=\"Сохранить\"\n        >\n            <input\n                type=\"text\" id=\"inputName\" name=\"inputName\"\n                placeholder=\"Введите Ваше имя\"\n                className=\"form__input form__input_type_name\"\n                minLength={2} maxLength={40} required\n                onChange={handleChangeName}\n                value={name || ''} \n            />\n            <span className=\"form__error\" id=\"inputName-error\" />\n            <input type=\"text\" id=\"inputJob\" name=\"inputJob\"\n                placeholder=\"Чем занимаетесь?\"\n                className=\"form__input form__input_type_job\"\n                minLength={2} maxLength={200} required\n                onChange={handleChangeJob}\n                value={description || ''} />\n            <span className=\"form__error\" id=\"inputJob-error\" />\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup\n","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\n\n\nfunction EditAvatarPopup(props) {\n\n    const userAvatarRef = React.useRef()\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        props.onUpdateAvatar({\n            avatar: userAvatarRef.current.value\n        });\n        // console.log(userAvatarRef.current.value)\n    }\n\n    return (\n        <PopupWithForm\n            name=\"avatar\"\n            title=\"Обновить аватар\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            saveButton=\"Сохранить\"\n            onSubmit={handleSubmit}\n        >\n            <input ref={userAvatarRef} type=\"url\" id=\"inputAvatar\"\n                name=\"inputAvatar\" placeholder=\"Ссылка на картинку\"\n                className=\"form__input form__input_type_addAvatar\"\n                required />\n            <span className=\"form__error\" id=\"inputAvatar-error\" />\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nfunction AddPlacePopup({onAddPlace, isOpen, onClose}) {\n\n    const [name, setName] = React.useState('')\n    const [link, setLink] = React.useState('')\n\n\n    function handleSubmit(evt) {\n        // Запрещаем браузеру переходить по адресу формы\n        evt.preventDefault()\n\n        // Передаём значения управляемых компонентов во внешний обработчик\n        onAddPlace({\n            name,\n            link\n        })\n    }\n\n    function handlChangePlace(evt) {\n        setName(evt.target.value)\n    }\n\n    function handleChangeLink(evt) {\n        setLink(evt.target.value)\n    }\n\n    return (\n        <PopupWithForm\n            name=\"add\"\n            title=\"Новое место\"\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n            saveButton=\"Сохранить\"\n        >\n            <input type=\"text\" id=\"inputAddTitle\" name=\"inputAddTitle\"\n                placeholder=\"Название\" className=\"form__input form__input_type_addTitle\"\n                minLength={2} maxLength={30} required\n                onChange={handlChangePlace} value={name} />\n            <span className=\"form__error\" id=\"inputAddTitle-error\" />\n            <input type=\"url\" id=\"inputURL\" name=\"inputURL\"\n                placeholder=\"Ссылка на картинку\" className=\"form__input form__input_type_addURL\" required\n                onChange={handleChangeLink} value={link} />\n            <span className=\"form__error\" id=\"inputURL-error\" />\n\n        </PopupWithForm>\n    )\n}\n\nexport default AddPlacePopup","import React from 'react'\n\nfunction ImagePopup({card, isOpen, onClose}) {\n    return (\n        <div className={`popup ${card && isOpen ? 'popup_active' : ''}`}>\n            <div className=\"popup__container popup__container_type_photo\">\n                <img className=\"popup__image\" src={`${card.link}`} alt={`Крупным планом ${card.name}`} />\n                <h2 className=\"popup__title popup__title_type_photo\">{card.name}</h2>\n                <button onClick={onClose}\n                    aria-label=\"Закрыть окно просмотра\" type=\"button\"\n                    className=\"popup__close-button popup__close-button_type_photo\" />\n            </div>\n        </div>\n    )\n}\n\nexport default ImagePopup","import React from 'react'\nimport PopupWithForm from './PopupWithForm'\n\nfunction ConfirmCardDelete(props) {\n\n    // Заготовка для реализации попапа с подтверждением удаления карточки\n    return (\n        <PopupWithForm\n            name=\"delete\"\n            title=\"Вы уверены?\"\n            onClose={props.onClose}\n            saveButton=\"Да\"\n        />\n    )\n\n}\n\nexport default ConfirmCardDelete","class Api {\n    constructor(options) {\n        this._address = options.address\n        this._groupId = options.groupId\n        this._token = options.token\n    }\n    getUserInfo() {\n        return fetch(`${this._address}/${this._groupId}/users/me`, {\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    patchUserInfo({ name: inputName, about: inputJob }) {\n        return fetch(`${this._address}/${this._groupId}/users/me`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: inputName,\n                about: inputJob,\n            })\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    getCards() {\n        return fetch(`${this._address}/${this._groupId}/cards`, {\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    postCard(apiData) {\n        return fetch(`${this._address}/${this._groupId}/cards`, {\n            method: 'POST',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                name: apiData.name,\n                link: apiData.link\n            })\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._address}/${this._groupId}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (!isLiked) {\n            return this.deleteLike(cardId);\n        } else {\n            return this.setLike(cardId);\n        }\n    }\n\n    setLike(cardId) {\n        return fetch(`${this._address}/${this._groupId}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: {\n                authorization: this._token,\n            }\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._address}/${this._groupId}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: {\n                authorization: this._token,\n            }\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n    patchUserAvatar(userData) {\n        return fetch(`${this._address}/${this._groupId}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: {\n                authorization: this._token,\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                avatar: userData.avatar\n            })\n        })\n            .then(res => this._checkServerResponse(res))\n    }\n\n    _checkServerResponse(res) {\n        if (res.ok) {\n            return res.json()\n        }\n        // Если происходит ошибка, отклоняем промис\n        return Promise.reject(`${res.status}`)\n    }\n}\n\nconst api = new Api({\n    address: 'https://mesto.nomoreparties.co/v1',\n    groupId: 'cohort-24',\n    token: '4d34d552-bc81-44cb-b18a-2296a1ced45f'\n})\n\nexport default api","import React from 'react'\nimport { Route, Redirect } from \"react-router-dom\"\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n    return (\n        <Route>\n            {\n                () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\n            }\n        </Route>\n    )\n}\n\nexport default ProtectedRoute","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport '../index.css'\n\nfunction Register() {\n    return (\n       <section className=\"sign-section\">\n           <h1 className=\"popup__title sign-form__title\">Регистрация</h1>\n            <form className=\"form sign-form\">\n                <input type=\"email\" required className=\"form__input sign-form__input\" placeholder=\"Email\"></input>\n                <input type=\"password\" required className=\"form__input sign-form__input\" placeholder=\"Пароль\"></input>\n                <button className=\"form__save-button sign-form__submit\">Зарегистрироваться</button>\n            </form>\n            <Link className=\"sign-form__link\" to=\"/sign-in\">Уже зарегистрированы? Войти</Link>\n       </section>\n    )\n}\nexport default Register","import React from 'react'\nimport '../index.css'\n\nfunction Login() {\n    return (\n       <section className=\"sign-section\">\n           <h1 className=\"popup__title sign-form__title\">Вход</h1>\n            <form className=\"form sign-form\">\n                <input type=\"email\" required className=\"form__input sign-form__input\" placeholder=\"Email\"></input>\n                <input type=\"password\" required className=\"form__input sign-form__input\" placeholder=\"Пароль\"></input>\n                <button className=\"form__save-button sign-form__submit\">Войти</button>\n            </form>\n       </section>\n    )\n}\nexport default Login","import React from 'react'\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport ImagePopup from './ImagePopup'\nimport ConfirmCardDelete from './ConfirmCardDelete'\nimport api from '../utils/api'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport ProtectedRoute from './ProtectedRoute'\nimport { Route, Switch } from 'react-router-dom'\nimport Register  from './Register'\nimport Login from './Login'\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false)\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false)\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false)\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false)\n    {/* Заготовка для реализации попапа с подтверждением удаления карточки */ }\n    const [isDeleteCardPopupOpen, setDeleteCardPopupOpen] = React.useState(false)\n    const [selectedCard, setSelectedCard] = React.useState({})\n    const [currentUser, setCurrentUser] = React.useState({})\n    const [cards, setCards] = React.useState([])\n    {/* Устанавливаем стейт для 12 спринта */ }\n    const [loggedIn, setLoggedIn] = React.useState(false)\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getCards()])\n            .then(([userData, apiData]) => {\n                setCurrentUser(userData)\n                setCards(apiData)\n                // console.log(apiData)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards((state) => state.filter((c) => c !== card))\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleUpdateUser(userData) {\n        api.patchUserInfo(userData)\n            .then((userData) => {\n                setCurrentUser(userData)\n                // console.log(userData)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleAddPlaceSubmit(apiData) {\n        api.postCard(apiData)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleUpdateAvatar(userData) {\n        api.patchUserAvatar(userData)\n            .then((userData) => {\n                setCurrentUser(userData)\n                // console.log(userData)\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true)\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true)\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true)\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n        setImagePopupOpen(true)\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false)\n        setAddPlacePopupOpen(false)\n        setImagePopupOpen(false)\n        setSelectedCard({})\n    }\n\n    return (\n        <div className=\"page__content\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header />\n                <Switch>\n                    {/* Регистрация нового пользователя */}\n                    <Route path=\"/sign-up\">\n                        <Register />\n                    </Route>\n                    {/* Авторизация существующего пользователя */}\n                    <Route path=\"/sign-in\">\n                        <Login />\n                    </Route>\n                    {/* Отрисовываем сайт для авторизованного пользователя */}\n                    <ProtectedRoute\n                        path=\"/\"\n                        component={Main}\n                        loggedIn={loggedIn}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n\n                    />\n                </Switch>\n                {/* <Main\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onCardClick={handleCardClick}\n                /> */}\n                <Footer />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onUpdateUser={handleUpdateUser}\n                    onClose={closeAllPopups}\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    onClose={closeAllPopups}\n                />\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onAddPlace={handleAddPlaceSubmit}\n                    onClose={closeAllPopups}\n                />\n\n                {/* Заготовка для реализации попапа с подтверждением удаления карточки */}\n                <ConfirmCardDelete\n                    isOpen={isDeleteCardPopupOpen}\n                    onClose={closeAllPopups}\n                />\n\n                <ImagePopup\n                    card={selectedCard}\n                    isOpen={isImagePopupOpen}\n                    onClose={closeAllPopups}\n                />\n            </CurrentUserContext.Provider>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter >\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}